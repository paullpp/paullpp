[
  {
    "id": 0,
    "name": "Portfolio Website",
    "startDate": "2024-04-10",
    "tags": [
      "TypeScript", "React", "Vite", "Tailwind", "DaisyUI", "Vercel"
    ],
    "imageUrl": "",
    "descriptionShort": "A portfolio highlighting some of my projects and class work",
    "descriptionLong": "Not much to say, just a regular portfolio website. Check out my projects, and feel free to contribute to any of them by opening an Issue / PR. Most of them I'm actively developing whenever I have time.",
    "url": "/"
  },
  {
    "id": 1,
    "name": "Hemp DB",
    "startDate": "2023-10-23",
    "tags": [
      "Python", "Django.py", "MySQL", "RDS", "Elastic Beanstalk"
    ],
    "imageUrl": "",
    "descriptionShort": "A full stack web app + mysql database built for the CMCI team at OSU",
    "descriptionLong": "I worked on this with a team of CS majors at Oregon State for our senior project. The senior project is a year long (3 quarters) project that has us working in a team of 4 people for a project sponsor to produce a piece of software. \n\nOur sponsor, the Center for Marketing and Consumer Insights at OSU, asked us to build a web app they can use to interact with a database for their research data. We decided on using django.py to build a full-stack CRUD app connected to a MySQL database, which they could use to perform CRUD operations. We decided on django partially due to its built-in admin portal and role-based permission system. Part of the project was making the website public, but limiting what columns public users could see. This was easily achieved by built-in django methods and djangos role-based permissions.",
    "url": "http://hempdb-dev.eba-8qc2e32t.us-west-2.elasticbeanstalk.com/"
  }, 
  {
    "id": 3,
    "name": "Trip Accountant",
    "startDate": "2024-04-05",
    "tags": [
      "Swift", "SwiftUI"
    ],
    "imageUrl": "",
    "descriptionShort": "Mobile app that helps even out travel expenses after trips with friends",
    "descriptionLong": "I frequently go on trips with 2-3 friends, usually hiking, snowboarding, camping, or just for vacation. Whenever we eat out, or make reservations, one of us foots the entire bill, and we 'do accounting later'. This means collecting all the purchase receipts throughout the trip, and then at the end, tallying up the total, dividing by the number of guests, figuring out who has already paid how much, and then deciding who has to venmo how much to who. This can get unnecessarily complicated and tedious the more transactions we make, and we usually have one person pay the bill, we don't like splitting at the table. This means lots of math later. After having this problem for many years, I thought it'd be fun to make an app that does all the math for you, so I did. \n\nThe Trip Accountant is an early-stage almost beta version app that lets you input all your transaction data, and then computes the final splits for you. There are many features I want to add to the app, as it's pretty bare-bones right now, but I'm looking forward to testing it on my next trip. ",
    "url": "https://apps.apple.com/us/app/the-trip-accountant/id6482983388"
  },
  {
    "id": 4,
    "name": "Spotify Bot",
    "startDate": "2022-03-01",
    "tags": [
      "JavaScript", "REST API", "OAuth"
    ],
    "imageUrl": "",
    "descriptionShort": "Adding functionality around liked songs and playlists to spotify",
    "descriptionLong": "[TypeScript Rewrite in Progress ⚙️] \n\nMany people using spotify opt to add songs they like to their liked songs, rather than playlists. This allows for easier management of the songs in the liked songs playlist, as you can add / remove songs with just a swipe. However, you lose the ability to share the playlist with others, or make it public on your spotify profile. Moreso, spotify does not allow dumping your liked songs into a playlist that can be shared easily; you have to go through each song, and manually add it. This can obviously be quite tedious if you have any significant number of songs in your liked songs playlist. \n\nAfter me and some of my friends experienced this issue, I decided to make a simple node app that makes use of spotify's public API, and - after authorizing with your spotify account - automatically iterates through each song in your liked playlist, and dumps it into a new playlist called 'Liked Songs'. \n\n The app is pretty ugly looking back at it, but a typescript rewrite is planned, now that I know a lot more about JS/TS. The app was however good enough for me and my friends, and definitely served its purpose well.",
    "url": "https://github.com/paullpp/spotify-bot"
  }
]